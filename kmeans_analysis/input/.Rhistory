devtools::install_github("rstudio/keras")
install(RTools)
library(RTools)
install_tensorflow()
library(keras)
install_tensorflow()
install.packages("tensorflow")
install.packages("RTools")
help()
install.packages(corrplot)
install.packages("corrplot")
install.packages("gridExtra")
install.packages("GGally")
# Load libraries
library(tidyverse)
library(corrplot)
library(gridExtra)
library(GGally)
# Read the stats
wines <- read.csv("input/combined_dataset.csv")
# View first 6 rows
head(wines)
header(wines)
library(readr)
# View first 6 rows
header(wines)
library(tidyverse)
library(dplyr)
library(tidyr)
library(readr)
library(tibble)
library(corrplot)
library(gridExtra)
library(GGally)
header(wines)
head(wines)
wines <- read.csv("input/combined_dataset.csv")
# View first 6 rows
head(wines)
wines <- read.csv("/input/combined_dataset.csv")
wines <- read.csv("/input/combined_dataset")
wines <- read.csv("./input/combined_dataset")
wines <- read.csv("input/combined_dataset")
wines <- read.csv("input/combined_dataset.csv", header = TRUE)
wines <- read.csv("/input/combined_dataset.csv", header = TRUE)
getwd()
setwd("C:/Users/Courtney/Documents/wine_datasets/input/")
wines <- read.csv("combined_dataset.csv", header = TRUE)
head(wines)
library(stats)
str(wines)
summary(wines)
wines <- as.numeric(wines$Type)
wines
head(wines)
head(wines)
wines <- read.csv("combined_dataset.csv", header = TRUE)
head(wines)
wines_binary <- ifelse(wines$Temp>0, 1, 0)
wines_binary <- ifelse(wines$Type>0, 1, 0)
head(wines_binary)
wines_binary <- ifelse(wines$Type, 1, 0)
wines_binary <- wines %>%
mutate(x = recode(x,
"Red" = "0",
"White" = "1")) %>%
mutate(x = as.numeric(x))
wines_binary <- wines %>%
mutate(x = recode(Type,
"Red" = "0",
"White" = "1")) %>%
mutate(x = as.numeric(x))
head(wines_binary)
mutate(x = as.numeric(x))
transform(wines, Type = as.numeric(Type))
wines <- read.csv("combined_dataset.csv", header = TRUE)
wines <- factor(c("Red", "White"))
recode(wines, Red = "0", White = "1", .default = levels(wines))
head(wines)
wines <- read.csv("combined_wine_binary.csv", header = TRUE)
str(wines)
summary(wines)
print(summary(wines))
wines %>%
gather(Attributes, value, 1:13) %>%
ggplot(aes(x=value)) +
geom_histogram(fill="lightblue2", colour="black") +
facet_wrap(~Attributes, scales="free_x") +
labs(x="Values", y="Frequency")
head(wines)
wines %>%
gather(Attributes, value, 1:13) %>%
ggplot(aes(x=value)) +
geom_histogram(fill="lightpurple2", colour="black") +
facet_wrap(~Attributes, scales="free_x") +
labs(x="Values", y="Frequency")
wines %>%
gather(Attributes, value, 1:13) %>%
ggplot(aes(x=value)) +
geom_histogram(fill="purple", colour="black") +
facet_wrap(~Attributes, scales="free_x") +
labs(x="Values", y="Frequency")
corrplot(cor(wines), type="upper", method="ellipse", tl.cex=0.9)
ggplot(wines, aes(x=total.sulfur.dioxide, y=Type)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
# Normalization
winesNorm <- as.data.frame(scale(wines))
# Original data
p1 <- ggplot(wines, aes(x=Alcohol, y=Malic_Acid)) +
geom_point() +
labs(title="Original data")
# Normalized data
p2 <- ggplot(winesNorm, aes(x=Alcohol, y=Malic_Acid)) +
geom_point() +
labs(title="Normalized data")
# Subplot
grid.arrange(p1, p2, ncol=2)
set.seed(1234)
wines_k2 <- kmeans(wines, centers=2)
wines_k2$cluster
wines_k2$centers
wines_k2$size
# Between-cluster sum of squares
wines_k2$betweenss
# Within-cluster sum of squares
wines_k2$withinss
# Total within-cluster sum of squares
wines_k2$tot.withinss
# Total sum of squares
wines_k2$totss
# Run the algorithm for different values of k
set.seed(1234)
for(i in 1:10){
# For each k, calculate betweenss and tot.withinss
bss[i] <- kmeans(winesNorm, centers=i)$betweenss
wss[i] <- kmeans(winesNorm, centers=i)$tot.withinss
}
# Between-cluster sum of squares vs Choice of k
p3 <- qplot(1:10, bss, geom=c("point", "line"),
xlab="Number of Clusters", ylab="Between-Cluster Sum of Squares") +
scale_x_continuous(breaks=seq(0, 10, 1))
# Total within-cluster sum of squares vs Choice of k
p4 <- qplot(1:10, wss, geom=c("point", "line"),
xlab="Number of Clusters", ylab="Total Within-Cluster Sum of Squares") +
scale_x_continuous(breaks=seq(0, 10, 1))
# Subplot
grid.arrange(p3, p4, ncol=2)
bss <- numeric()
wss <- numeric()
set.seed(1234)
for(i in 1:10){
# For each k, calculate betweenss and tot.withinss
bss[i] <- kmeans(winesNorm, centers=i)$betweenss
wss[i] <- kmeans(winesNorm, centers=i)$tot.withinss
}
# Between-cluster sum of squares vs Choice of k
p3 <- qplot(1:10, bss, geom=c("point", "line"),
xlab="Number of Clusters", ylab="Between-Cluster Sum of Squares") +
scale_x_continuous(breaks=seq(0, 10, 1))
# Total within-cluster sum of squares vs Choice of k
p4 <- qplot(1:10, wss, geom=c("point", "line"),
xlab="Number of Clusters", ylab="Total Within-Cluster Sum of Squares") +
scale_x_continuous(breaks=seq(0, 10, 1))
# Subplot
grid.arrange(p3, p4, ncol=2)
set.seed(1234)
wines_k2 <- kmeans(wines, centers=3)
# Mean values of each cluster
aggregate(wines, by=list(wines_k2$cluster), mean)
ggpairs(cbind(wines, Cluster=as.factor(wines_k2$cluster)),
columns=1:6, aes(colour=Cluster, alpha=0.5),
lower=list(continuous="points"),
upper=list(continuous="blank"),
axisLabels="none", switch="both")
ggpairs(cbind(wines, Cluster=as.factor(wines_k2$cluster)),
columns=1:13, aes(colour=Cluster, alpha=0.5),
lower=list(continuous="points"),
upper=list(continuous="blank"),
axisLabels="none", switch="both")
